import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import joblib

# ðŸ”¹ Simulated training data (replace with real Kaggle data if available)
data = pd.DataFrame({
    'total_debt': [3000, 15000, 7000, 4000, 12000, 8000, 25000, 1000],
    'income': [4000, 3000, 6000, 5000, 3500, 7000, 2000, 5500],
    'age': [25, 45, 30, 22, 40, 35, 28, 50],
    'payment_history_score': [90, 40, 75, 85, 35, 70, 20, 88],
    'default': [0, 1, 0, 0, 1, 0, 1, 0]
})

# Features and label
X = data[['total_debt', 'income', 'age', 'payment_history_score']]
y = data['default']

# Split for validation
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

# Save model
joblib.dump(model, 'models/default_predictor.pkl')
print("âœ… Model saved to models/default_predictor.pkl")

